# main.py - Sistema de Gesti√≥n de Inventario Empresarial (Refactorizado)
"""
Sistema completo de gesti√≥n de inventario con DearPyGUI.
Versi√≥n refactorizada con separaci√≥n de responsabilidades:
- main.py: Solo inicializaci√≥n y configuraci√≥n
- *_manager.py: L√≥gica de negocio y interfaces espec√≠ficas
"""

import dearpygui.dearpygui as dpg
import sys
import os
import logging
from datetime import datetime

# Importar m√≥dulos de gesti√≥n
# from modules.categorias_manager import CategoriasManager
# from modules.proveedores_manager import ProveedoresManager  
# from modules.productos_manager import ProductosManager
# from modules.movimientos_manager import MovimientosManager

# Configurar logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class InventarioApp:
    """Aplicaci√≥n principal del sistema de inventario empresarial"""
    
    def __init__(self):
        self.db_name = "inventario.db"
        
        try:
            # Inicializar managers con manejo de errores
            logger.info("üöÄ Inicializando sistema de inventario...")
            
        except Exception as e:
            logger.error(f"‚ùå Error durante la inicializaci√≥n: {e}")
            raise
    
    def _configure_callbacks(self):
        """Configurar callbacks entre m√≥dulos para mantener sincronizaci√≥n"""
        
    # ================================
    # EJECUCI√ìN PRINCIPAL
    # ================================
    
    def ejecutar(self):
        """Ejecutar la aplicaci√≥n"""

        # Configurar DearPyGUI
        dpg.setup_dearpygui()
        
        # Mostrar la aplicaci√≥n primero
        dpg.show_viewport()
        
        try:
            # Cargar datos iniciales usando los managers DESPU√âS de mostrar la interfaz
            logger.info("üîÑ Cargando datos iniciales...")
        except Exception as e:
            logger.error(f"‚ö†Ô∏è Error cargando datos iniciales: {e}")
            # Continuar con la aplicaci√≥n aunque fallen los datos iniciales
        dpg.start_dearpygui()
        
        # Limpiar recursos al cerrar
        dpg.destroy_context()

def main():
    """Funci√≥n principal"""
    try:
        app = InventarioApp()
        app.ejecutar()
    except Exception as e:
        print(f"‚ùå Error iniciando aplicaci√≥n: {e}")
        if dpg.is_dearpygui_running():
            dpg.destroy_context()

if __name__ == "__main__":
    main()